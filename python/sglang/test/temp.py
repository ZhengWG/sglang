from openai import OpenAI
import time
import random
import threading
import time
from concurrent.futures import ThreadPoolExecutor

def run_warmup(ip):
    print(f'start {ip=}')
    openai_api_key = "EMPTY"
    openai_api_base = f"http://{ip}:8188/v1"

    client = OpenAI(
        # defaults to os.environ.get("OPENAI_API_KEY")
        api_key=openai_api_key,
        base_url=openai_api_base,
    )
    model = 'auto'
    for p_len in range(0, 1):
        chat_completion = client.chat.completions.create(
            messages=[
                {
                    "role": "user",
                    "content": "你好"
                }
            ],
            stream=True,
            stream_options={"include_usage": True, "continuous_usage_stats": True},
            model=model,
            max_tokens=2,
            temperature=0.0
        )
        tokens = 0
        yield_cnt = 0
        prompt_tokens = 0
        cached_tokens = 0
        start_time = time.time()
        think_label = True
        for ck in chat_completion:
            # if ck.choices and ck.choices[0].delta.content:
            #     print(ck.choices[0].delta.content, flush=True, end='')
            if tokens == 0 and yield_cnt == 0:
                ttft_time = time.time() - start_time
            # tokens += 1
            yield_cnt += 1
            if ck.usage:
                # print(f'kkk = {ck.usage}')
                tokens = ck.usage.completion_tokens
                prompt_tokens = ck.usage.prompt_tokens
                if ck.usage.prompt_tokens_details and ck.usage.prompt_tokens_details.cached_tokens:
                    cached_tokens = ck.usage.prompt_tokens_details.cached_tokens
        end_time = time.time()
        cost_time = end_time - start_time
        # print('ip: {}\n\ninput_tokens=({}/{}), new_tokens={}, tokens_per_yield={:.2f}, latency={:.2f}s, first_token_rt={:.2f}ms, time_per_token={:.2f}ms, tokens_per_sec={:.2f}'.format(ip, cached_tokens, prompt_tokens, tokens, tokens/yield_cnt, cost_time, ttft_time*1000, (cost_time-ttft_time)*1000/(tokens-1), (tokens-1)/(cost_time-ttft_time)))

# Modify OpenAI's API key and API base to use vLLM's API server.
# prompt = input('prompt: ')

ip_list = ["33.180.27.45","33.180.26.95","33.180.26.244","33.180.27.81","33.180.27.120","33.180.27.34","33.180.26.236","33.180.26.80","33.180.27.26","33.180.26.104","33.180.26.240","33.180.26.63","33.180.27.28","33.180.27.15","33.180.27.84","33.180.26.22","33.180.27.10","33.180.26.68","33.180.27.61","33.180.27.1","33.180.27.43","33.180.27.27","33.180.27.6","33.180.27.71","33.180.27.90","33.180.26.230","33.180.26.113","33.180.26.238","33.180.26.219","33.180.26.47","33.180.26.254","33.180.26.252","33.180.26.237","33.180.27.38","33.180.27.56","33.180.27.63","33.180.27.93","33.180.26.116","33.180.27.11","33.180.26.52","33.180.27.78","33.180.26.221","33.180.27.74","33.180.27.101","33.180.26.44","33.180.27.119","33.180.27.48","33.180.27.76","33.180.26.117","33.180.26.57","33.180.26.69","33.180.27.66","33.180.27.7","33.180.26.110","33.180.26.45","33.180.27.2","33.180.26.106","33.180.27.13","33.180.26.101","33.180.26.90","33.180.27.24","33.180.26.82","33.180.26.100","33.180.27.92","33.180.26.48","33.180.27.3","33.180.26.243","33.180.26.103","33.180.26.55","33.180.26.76","33.180.26.118","33.180.27.29","33.180.27.87","33.180.26.228","33.180.27.69","33.180.27.36","33.180.27.65","33.180.27.18","33.180.26.78","33.180.26.105","33.180.27.49","33.180.26.40","33.180.26.21","33.180.26.33","33.180.26.59","33.180.26.46","33.180.26.77","33.180.26.223","33.180.26.32","33.180.27.42","33.180.27.41","33.180.27.35","33.180.26.50","33.180.27.154","33.180.26.248","33.180.26.70","33.180.26.51","33.180.26.41","33.180.26.74","33.180.27.59","33.180.27.54","33.180.26.222","33.180.26.75","33.180.26.112","33.180.26.247","33.180.27.51","33.180.27.58","33.180.26.42","33.180.27.70","33.180.27.62","33.180.26.88","33.180.26.71","33.180.26.99","33.180.27.163","33.180.27.57","33.180.27.9","33.180.27.89","33.180.27.32","33.180.27.82","33.180.27.167","33.180.26.224","33.180.26.31","33.180.26.62","33.180.27.31","33.180.27.96","33.180.27.79","33.180.27.88","33.180.27.60","33.180.27.40","33.180.26.94","33.180.27.23","33.180.27.75","33.180.26.60","33.180.26.245","33.180.26.26","33.180.27.4","33.180.27.12","33.180.27.121","33.180.26.226","33.180.27.99","33.180.27.91","33.180.27.37","33.180.26.27","33.180.26.233","33.180.27.21","33.180.26.61","33.180.27.67","33.180.27.98","33.180.27.47","33.180.27.116","33.180.26.253","33.180.27.144","33.180.27.209","33.180.27.22","33.180.27.80","33.180.27.174","33.180.27.130","33.180.26.241","33.180.26.19","33.180.27.0","33.180.27.64","33.180.27.33","33.180.27.17","33.180.27.52","33.180.27.83","33.180.26.79","33.180.26.115","33.180.27.150","33.180.26.234","33.180.26.249","33.180.26.107","33.180.26.114","33.180.27.55","33.180.27.94","33.180.26.53","33.180.26.98","33.180.26.91","33.180.26.89","33.180.26.35","33.180.26.108","33.180.27.77","33.180.27.14","33.180.26.251","33.180.26.111","33.180.27.72","33.180.26.65","33.180.27.179","33.180.26.83","33.180.26.20","33.180.26.229","33.180.26.38","33.180.26.235","33.180.26.92","33.180.27.8","33.180.26.64","33.180.27.20","33.180.26.49","33.180.26.43","33.180.26.72","33.180.26.25"]
threadPool = ThreadPoolExecutor(max_workers=80, thread_name_prefix="test_")
while True:
    for ip in ip_list:
        threadPool.submit(run_warmup, ip)
    time.sleep(30)
threadPool.shutdown(wait=True)
